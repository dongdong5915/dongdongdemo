!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
HLIST_HEAD	hlist.h	207;"	d	language:C++
HLIST_HEAD_INIT	hlist.h	206;"	d	language:C++
INIT_HLIST_HEAD	hlist.h	208;"	d	language:C++
INIT_HLIST_NODE	hlist.h	209;"	d	language:C++
INIT_LIST_HEAD	hlist.h	25;"	d	language:C++
LISTSIZE	hlist.c	23;"	d	language:C	file:
LIST_HEAD	hlist.h	22;"	d	language:C++
LIST_HEAD_INIT	hlist.h	20;"	d	language:C++
LIST_POISON1	hlist.h	13;"	d	language:C++
LIST_POISON2	hlist.h	14;"	d	language:C++
ST	hlist.c	/^struct ST {$/;"	s	language:C	file:
_LINUX_LIST_H	hlist.h	2;"	d	language:C++
__hlist_del	hlist.h	/^static inline void __hlist_del(struct hlist_node *n)$/;"	f	language:C++	signature:(struct hlist_node *n)
__list_add	hlist.h	/^static inline void __list_add(struct list_head *new,$/;"	f	language:C++	signature:(struct list_head *new, struct list_head *prev, struct list_head *next)
__list_del	hlist.h	/^static inline void __list_del(struct list_head * prev, struct list_head * next)$/;"	f	language:C++	signature:(struct list_head * prev, struct list_head * next)
__list_for_each	hlist.h	162;"	d	language:C++
__list_splice	hlist.h	/^static inline void __list_splice(struct list_head *list,$/;"	f	language:C++	signature:(struct list_head *list, struct list_head *head)
ch	hlist.c	/^    unsigned char ch;$/;"	m	language:C	struct:ST	file:
container_of	hlist.h	6;"	d	language:C++
end_data	hlist.c	/^    int	end_data;$/;"	m	language:C	struct:ST	file:
first	hlist.h	/^struct hlist_node *first;$/;"	m	language:C++	struct:hlist_head	typeref:struct:hlist_head::hlist_node
gethash	hlist.c	/^unsigned int gethash(int c)$/;"	f	language:C	signature:(int c)
hlist	hlist.c	/^struct hlist_head hlist[1024];$/;"	v	language:C	typeref:struct:hlist_head
hlist_add_after	hlist.h	/^static inline void hlist_add_after(struct hlist_node *n,$/;"	f	language:C++	signature:(struct hlist_node *n, struct hlist_node *next)
hlist_add_before	hlist.h	/^static inline void hlist_add_before(struct hlist_node *n,$/;"	f	language:C++	signature:(struct hlist_node *n, struct hlist_node *next)
hlist_add_head	hlist.h	/^static inline void hlist_add_head(struct hlist_node *n, struct hlist_head *h)$/;"	f	language:C++	signature:(struct hlist_node *n, struct hlist_head *h)
hlist_del	hlist.h	/^static inline void hlist_del(struct hlist_node *n)$/;"	f	language:C++	signature:(struct hlist_node *n)
hlist_del_init	hlist.h	/^static inline void hlist_del_init(struct hlist_node *n)$/;"	f	language:C++	signature:(struct hlist_node *n)
hlist_empty	hlist.h	/^static inline int hlist_empty(const struct hlist_head *h)$/;"	f	language:C++	signature:(const struct hlist_head *h)
hlist_entry	hlist.h	277;"	d	language:C++
hlist_for_each	hlist.h	279;"	d	language:C++
hlist_for_each_entry	hlist.h	287;"	d	language:C++
hlist_for_each_entry_continue	hlist.h	293;"	d	language:C++
hlist_for_each_entry_from	hlist.h	299;"	d	language:C++
hlist_for_each_entry_safe	hlist.h	304;"	d	language:C++
hlist_for_each_safe	hlist.h	283;"	d	language:C++
hlist_head	hlist.h	/^struct hlist_head {$/;"	s	language:C++
hlist_node	hlist.h	/^struct hlist_node {$/;"	s	language:C++
hlist_unhashed	hlist.h	/^static inline int hlist_unhashed(const struct hlist_node *h)$/;"	f	language:C++	signature:(const struct hlist_node *h)
i_hash	hlist.c	/^    struct hlist_node i_hash;$/;"	m	language:C	struct:ST	typeref:struct:ST::hlist_node	file:
i_list	hlist.c	/^    struct list_head  i_list;$/;"	m	language:C	struct:ST	typeref:struct:ST::list_head	file:
list1	hlist.c	/^struct list_head list1;$/;"	v	language:C	typeref:struct:list_head
list_add	hlist.h	/^static inline void list_add(struct list_head *new, struct list_head *head)$/;"	f	language:C++	signature:(struct list_head *new, struct list_head *head)
list_add_tail	hlist.h	/^static inline void list_add_tail(struct list_head *new, struct list_head *head)$/;"	f	language:C++	signature:(struct list_head *new, struct list_head *head)
list_del	hlist.h	/^static inline void list_del(struct list_head *entry)$/;"	f	language:C++	signature:(struct list_head *entry)
list_del_init	hlist.h	/^static inline void list_del_init(struct list_head *entry)$/;"	f	language:C++	signature:(struct list_head *entry)
list_empty	hlist.h	/^static inline int list_empty(const struct list_head *head)$/;"	f	language:C++	signature:(const struct list_head *head)
list_empty_careful	hlist.h	/^static inline int list_empty_careful(const struct list_head *head)$/;"	f	language:C++	signature:(const struct list_head *head)
list_entry	hlist.h	155;"	d	language:C++
list_for_each	hlist.h	158;"	d	language:C++
list_for_each_entry	hlist.h	173;"	d	language:C++
list_for_each_entry_continue	hlist.h	186;"	d	language:C++
list_for_each_entry_reverse	hlist.h	178;"	d	language:C++
list_for_each_entry_safe	hlist.h	191;"	d	language:C++
list_for_each_prev	hlist.h	165;"	d	language:C++
list_for_each_safe	hlist.h	169;"	d	language:C++
list_head	hlist.h	/^struct list_head {$/;"	s	language:C++
list_move	hlist.h	/^static inline void list_move(struct list_head *list, struct list_head *head)$/;"	f	language:C++	signature:(struct list_head *list, struct list_head *head)
list_move_tail	hlist.h	/^static inline void list_move_tail(struct list_head *list,$/;"	f	language:C++	signature:(struct list_head *list, struct list_head *head)
list_prepare_entry	hlist.h	183;"	d	language:C++
list_splice	hlist.h	/^static inline void list_splice(struct list_head *list, struct list_head *head)$/;"	f	language:C++	signature:(struct list_head *list, struct list_head *head)
list_splice_init	hlist.h	/^static inline void list_splice_init(struct list_head *list,$/;"	f	language:C++	signature:(struct list_head *list, struct list_head *head)
main	hlist.c	/^main()$/;"	f	language:C
more_data	hlist.c	/^    int 	more_data;$/;"	m	language:C	struct:ST	file:
next	hlist.h	/^struct hlist_node *next, **pprev;$/;"	m	language:C++	struct:hlist_node	typeref:struct:hlist_node::hlist_node
next	hlist.h	/^struct list_head *next, *prev;$/;"	m	language:C++	struct:list_head	typeref:struct:list_head::list_head
offsetof	hlist.h	4;"	d	language:C++
pprev	hlist.h	/^struct hlist_node *next, **pprev;$/;"	m	language:C++	struct:hlist_node	typeref:struct:hlist_node::
prefetch	hlist.h	/^static inline void prefetch(const void *x) {;}$/;"	f	language:C++	signature:(const void *x)
prefetchw	hlist.h	/^static inline void prefetchw(const void *x) {;}$/;"	f	language:C++	signature:(const void *x)
prev	hlist.h	/^struct list_head *next, *prev;$/;"	m	language:C++	struct:list_head	typeref:struct:list_head::
st	hlist.c	/^} *st;$/;"	v	language:C	typeref:struct:ST
str_data	hlist.c	/^    char	str_data[32];$/;"	m	language:C	struct:ST	file:
this_data	hlist.c	/^    int 	this_data;$/;"	m	language:C	struct:ST	file:
